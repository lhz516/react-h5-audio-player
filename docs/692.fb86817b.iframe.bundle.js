"use strict";(self.webpackChunkreact_h5_audio_player=self.webpackChunkreact_h5_audio_player||[]).push([[692],{"./node_modules/@babel/runtime/helpers/esm/extends.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}__webpack_require__.d(__webpack_exports__,{A:()=>_extends})},"./node_modules/@iconify/react/dist/iconify.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{In:()=>Icon});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const defaultIconDimensions=Object.freeze({left:0,top:0,width:16,height:16}),defaultIconTransformations=Object.freeze({rotate:0,vFlip:!1,hFlip:!1}),defaultIconProps=Object.freeze({...defaultIconDimensions,...defaultIconTransformations}),defaultExtendedIconProps=Object.freeze({...defaultIconProps,body:"",hidden:!1});function mergeIconData(parent,child){const result=function mergeIconTransformations(obj1,obj2){const result={};!obj1.hFlip!=!obj2.hFlip&&(result.hFlip=!0),!obj1.vFlip!=!obj2.vFlip&&(result.vFlip=!0);const rotate=((obj1.rotate||0)+(obj2.rotate||0))%4;return rotate&&(result.rotate=rotate),result}(parent,child);for(const key in defaultExtendedIconProps)key in defaultIconTransformations?key in parent&&!(key in result)&&(result[key]=defaultIconTransformations[key]):key in child?result[key]=child[key]:key in parent&&(result[key]=parent[key]);return result}function internalGetIconData(data,name,tree){const icons=data.icons,aliases=data.aliases||Object.create(null);let currentProps={};function parse(name2){currentProps=mergeIconData(icons[name2]||aliases[name2],currentProps)}return parse(name),tree.forEach(parse),mergeIconData(data,currentProps)}function parseIconSet(data,callback){const names=[];if("object"!=typeof data||"object"!=typeof data.icons)return names;data.not_found instanceof Array&&data.not_found.forEach(name=>{callback(name,null),names.push(name)});const tree=function getIconsTree(data,names){const icons=data.icons,aliases=data.aliases||Object.create(null),resolved=Object.create(null);return Object.keys(icons).concat(Object.keys(aliases)).forEach(function resolve(name){if(icons[name])return resolved[name]=[];if(!(name in resolved)){resolved[name]=null;const parent=aliases[name]&&aliases[name].parent,value=parent&&resolve(parent);value&&(resolved[name]=[parent].concat(value))}return resolved[name]}),resolved}(data);for(const name in tree){const item=tree[name];item&&(callback(name,internalGetIconData(data,name,item)),names.push(name))}return names}const optionalPropertyDefaults={provider:"",aliases:{},not_found:{},...defaultIconDimensions};function checkOptionalProps(item,defaults){for(const prop in defaults)if(prop in item&&typeof item[prop]!=typeof defaults[prop])return!1;return!0}function quicklyValidateIconSet(obj){if("object"!=typeof obj||null===obj)return null;const data=obj;if("string"!=typeof data.prefix||!obj.icons||"object"!=typeof obj.icons)return null;if(!checkOptionalProps(obj,optionalPropertyDefaults))return null;const icons=data.icons;for(const name in icons){const icon=icons[name];if(!name||"string"!=typeof icon.body||!checkOptionalProps(icon,defaultExtendedIconProps))return null}const aliases=data.aliases||Object.create(null);for(const name in aliases){const icon=aliases[name],parent=icon.parent;if(!name||"string"!=typeof parent||!icons[parent]&&!aliases[parent]||!checkOptionalProps(icon,defaultExtendedIconProps))return null}return data}const matchIconName=/^[a-z0-9]+(-[a-z0-9]+)*$/,stringToIcon=(value,validate,allowSimpleName,provider="")=>{const colonSeparated=value.split(":");if("@"===value.slice(0,1)){if(colonSeparated.length<2||colonSeparated.length>3)return null;provider=colonSeparated.shift().slice(1)}if(colonSeparated.length>3||!colonSeparated.length)return null;if(colonSeparated.length>1){const name2=colonSeparated.pop(),prefix=colonSeparated.pop(),result={provider:colonSeparated.length>0?colonSeparated[0]:provider,prefix,name:name2};return validate&&!validateIconName(result)?null:result}const name=colonSeparated[0],dashSeparated=name.split("-");if(dashSeparated.length>1){const result={provider,prefix:dashSeparated.shift(),name:dashSeparated.join("-")};return validate&&!validateIconName(result)?null:result}if(allowSimpleName&&""===provider){const result={provider,prefix:"",name};return validate&&!validateIconName(result,allowSimpleName)?null:result}return null},validateIconName=(icon,allowSimpleName)=>!!icon&&!(!(allowSimpleName&&""===icon.prefix||icon.prefix)||!icon.name),dataStorage=Object.create(null);function getStorage(provider,prefix){const providerStorage=dataStorage[provider]||(dataStorage[provider]=Object.create(null));return providerStorage[prefix]||(providerStorage[prefix]=function newStorage(provider,prefix){return{provider,prefix,icons:Object.create(null),missing:new Set}}(provider,prefix))}function addIconSet(storage,data){return quicklyValidateIconSet(data)?parseIconSet(data,(name,icon)=>{icon?storage.icons[name]=icon:storage.missing.add(name)}):[]}let simpleNames=!1;function allowSimpleNames(allow){return"boolean"==typeof allow&&(simpleNames=allow),simpleNames}function getIconData(name){const icon="string"==typeof name?stringToIcon(name,!0,simpleNames):name;if(icon){const storage=getStorage(icon.provider,icon.prefix),iconName=icon.name;return storage.icons[iconName]||(storage.missing.has(iconName)?null:void 0)}}function addCollection(data,provider){if("object"!=typeof data)return!1;if("string"!=typeof provider&&(provider=data.provider||""),simpleNames&&!provider&&!data.prefix){let added=!1;return quicklyValidateIconSet(data)&&(data.prefix="",parseIconSet(data,(name,icon)=>{(function addIcon(name,data){const icon=stringToIcon(name,!0,simpleNames);if(!icon)return!1;const storage=getStorage(icon.provider,icon.prefix);return data?function addIconToStorage(storage,name,icon){try{if("string"==typeof icon.body)return storage.icons[name]={...icon},!0}catch(err){}return!1}(storage,icon.name,data):(storage.missing.add(icon.name),!0)})(name,icon)&&(added=!0)})),added}const prefix=data.prefix;if(!validateIconName({prefix,name:"a"}))return!1;return!!addIconSet(getStorage(provider,prefix),data)}const defaultIconSizeCustomisations=Object.freeze({width:null,height:null}),defaultIconCustomisations=Object.freeze({...defaultIconSizeCustomisations,...defaultIconTransformations}),unitsSplit=/(-?[0-9.]*[0-9]+[0-9.]*)/g,unitsTest=/^-?[0-9.]*[0-9]+[0-9.]*$/g;function calculateSize(size,ratio,precision){if(1===ratio)return size;if(precision=precision||100,"number"==typeof size)return Math.ceil(size*ratio*precision)/precision;if("string"!=typeof size)return size;const oldParts=size.split(unitsSplit);if(null===oldParts||!oldParts.length)return size;const newParts=[];let code=oldParts.shift(),isNumber=unitsTest.test(code);for(;;){if(isNumber){const num=parseFloat(code);isNaN(num)?newParts.push(code):newParts.push(Math.ceil(num*ratio*precision)/precision)}else newParts.push(code);if(code=oldParts.shift(),void 0===code)return newParts.join("");isNumber=!isNumber}}const regex=/\sid="(\S+)"/g,randomPrefix="IconifyId"+Date.now().toString(16)+(16777216*Math.random()|0).toString(16);let counter=0;function replaceIDs(body,prefix=randomPrefix){const ids=[];let match;for(;match=regex.exec(body);)ids.push(match[1]);if(!ids.length)return body;const suffix="suffix"+(16777216*Math.random()|Date.now()).toString(16);return ids.forEach(id=>{const newID="function"==typeof prefix?prefix(id):prefix+(counter++).toString(),escapedID=id.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");body=body.replace(new RegExp('([#;"])('+escapedID+')([")]|\\.[a-z])',"g"),"$1"+newID+suffix+"$3")}),body=body.replace(new RegExp(suffix,"g"),"")}const storage=Object.create(null);function setAPIModule(provider,item){storage[provider]=item}function getAPIModule(provider){return storage[provider]||storage[""]}function createAPIConfig(source){let resources;if("string"==typeof source.resources)resources=[source.resources];else if(resources=source.resources,!(resources instanceof Array&&resources.length))return null;return{resources,path:source.path||"/",maxURL:source.maxURL||500,rotate:source.rotate||750,timeout:source.timeout||5e3,random:!0===source.random,index:source.index||0,dataAfterTimeout:!1!==source.dataAfterTimeout}}const configStorage=Object.create(null),fallBackAPISources=["https://api.simplesvg.com","https://api.unisvg.com"],fallBackAPI=[];for(;fallBackAPISources.length>0;)1===fallBackAPISources.length||Math.random()>.5?fallBackAPI.push(fallBackAPISources.shift()):fallBackAPI.push(fallBackAPISources.pop());function addAPIProvider(provider,customConfig){const config=createAPIConfig(customConfig);return null!==config&&(configStorage[provider]=config,!0)}function getAPIConfig(provider){return configStorage[provider]}configStorage[""]=createAPIConfig({resources:["https://api.iconify.design"].concat(fallBackAPI)});let fetchModule=(()=>{let callback;try{if(callback=fetch,"function"==typeof callback)return callback}catch(err){}})();const fetchAPIModule={prepare:(provider,prefix,icons)=>{const results=[],maxLength=function calculateMaxLength(provider,prefix){const config=getAPIConfig(provider);if(!config)return 0;let result;if(config.maxURL){let maxHostLength=0;config.resources.forEach(item=>{const host=item;maxHostLength=Math.max(maxHostLength,host.length)});const url=prefix+".json?icons=";result=config.maxURL-maxHostLength-config.path.length-url.length}else result=0;return result}(provider,prefix);let item={type:"icons",provider,prefix,icons:[]},length=0;return icons.forEach((name,index)=>{length+=name.length+1,length>=maxLength&&index>0&&(results.push(item),item={type:"icons",provider,prefix,icons:[]},length=name.length),item.icons.push(name)}),results.push(item),results},send:(host,params,callback)=>{if(!fetchModule)return void callback("abort",424);let path=function getPath(provider){if("string"==typeof provider){const config=getAPIConfig(provider);if(config)return config.path}return"/"}(params.provider);switch(params.type){case"icons":{const prefix=params.prefix,iconsList=params.icons.join(",");path+=prefix+".json?"+new URLSearchParams({icons:iconsList}).toString();break}case"custom":{const uri=params.uri;path+="/"===uri.slice(0,1)?uri.slice(1):uri;break}default:return void callback("abort",400)}let defaultError=503;fetchModule(host+path).then(response=>{const status=response.status;if(200===status)return defaultError=501,response.json();setTimeout(()=>{callback(function shouldAbort(status){return 404===status}(status)?"abort":"next",status)})}).then(data=>{"object"==typeof data&&null!==data?setTimeout(()=>{callback("success",data)}):setTimeout(()=>{404===data?callback("abort",data):callback("next",defaultError)})}).catch(()=>{callback("next",defaultError)})}};function removeCallback(storages,id){storages.forEach(storage=>{const items=storage.loaderCallbacks;items&&(storage.loaderCallbacks=items.filter(row=>row.id!==id))})}let idCounter=0;var defaultConfig={resources:[],index:0,timeout:2e3,rotate:750,random:!1,dataAfterTimeout:!1};function sendQuery(config,payload,query,done){const resourcesCount=config.resources.length,startIndex=config.random?Math.floor(Math.random()*resourcesCount):config.index;let resources;if(config.random){let list=config.resources.slice(0);for(resources=[];list.length>1;){const nextIndex=Math.floor(Math.random()*list.length);resources.push(list[nextIndex]),list=list.slice(0,nextIndex).concat(list.slice(nextIndex+1))}resources=resources.concat(list)}else resources=config.resources.slice(startIndex).concat(config.resources.slice(0,startIndex));const startTime=Date.now();let lastError,status="pending",queriesSent=0,timer=null,queue=[],doneCallbacks=[];function resetTimer(){timer&&(clearTimeout(timer),timer=null)}function abort(){"pending"===status&&(status="aborted"),resetTimer(),queue.forEach(item=>{"pending"===item.status&&(item.status="aborted")}),queue=[]}function subscribe(callback,overwrite){overwrite&&(doneCallbacks=[]),"function"==typeof callback&&doneCallbacks.push(callback)}function failQuery(){status="failed",doneCallbacks.forEach(callback=>{callback(void 0,lastError)})}function clearQueue(){queue.forEach(item=>{"pending"===item.status&&(item.status="aborted")}),queue=[]}function execNext(){if("pending"!==status)return;resetTimer();const resource=resources.shift();if(void 0===resource)return queue.length?void(timer=setTimeout(()=>{resetTimer(),"pending"===status&&(clearQueue(),failQuery())},config.timeout)):void failQuery();const item={status:"pending",resource,callback:(status2,data)=>{!function moduleResponse(item,response,data){const isError="success"!==response;switch(queue=queue.filter(queued=>queued!==item),status){case"pending":break;case"failed":if(isError||!config.dataAfterTimeout)return;break;default:return}if("abort"===response)return lastError=data,void failQuery();if(isError)return lastError=data,void(queue.length||(resources.length?execNext():failQuery()));if(resetTimer(),clearQueue(),!config.random){const index=config.resources.indexOf(item.resource);-1!==index&&index!==config.index&&(config.index=index)}status="completed",doneCallbacks.forEach(callback=>{callback(data)})}(item,status2,data)}};queue.push(item),queriesSent++,timer=setTimeout(execNext,config.rotate),query(resource,payload,item.callback)}return"function"==typeof done&&doneCallbacks.push(done),setTimeout(execNext),function getQueryStatus(){return{startTime,payload,status,queriesSent,queriesPending:queue.length,subscribe,abort}}}function initRedundancy(cfg){const config={...defaultConfig,...cfg};let queries=[];function cleanup(){queries=queries.filter(item=>"pending"===item().status)}return{query:function query(payload,queryCallback,doneCallback){const query2=sendQuery(config,payload,queryCallback,(data,error)=>{cleanup(),doneCallback&&doneCallback(data,error)});return queries.push(query2),query2},find:function find(callback){return queries.find(value=>callback(value))||null},setIndex:index=>{config.index=index},getIndex:()=>config.index,cleanup}}function emptyCallback$1(){}const redundancyCache=Object.create(null);function sendAPIQuery(target,query,callback){let redundancy,send;if("string"==typeof target){const api=getAPIModule(target);if(!api)return callback(void 0,424),emptyCallback$1;send=api.send;const cached=function getRedundancyCache(provider){if(!redundancyCache[provider]){const config=getAPIConfig(provider);if(!config)return;const cachedReundancy={config,redundancy:initRedundancy(config)};redundancyCache[provider]=cachedReundancy}return redundancyCache[provider]}(target);cached&&(redundancy=cached.redundancy)}else{const config=createAPIConfig(target);if(config){redundancy=initRedundancy(config);const api=getAPIModule(target.resources?target.resources[0]:"");api&&(send=api.send)}}return redundancy&&send?redundancy.query(query,send,callback)().abort:(callback(void 0,424),emptyCallback$1)}function emptyCallback(){}function loadedNewIcons(storage){storage.iconsLoaderFlag||(storage.iconsLoaderFlag=!0,setTimeout(()=>{storage.iconsLoaderFlag=!1,function updateCallbacks(storage){storage.pendingCallbacksFlag||(storage.pendingCallbacksFlag=!0,setTimeout(()=>{storage.pendingCallbacksFlag=!1;const items=storage.loaderCallbacks?storage.loaderCallbacks.slice(0):[];if(!items.length)return;let hasPending=!1;const provider=storage.provider,prefix=storage.prefix;items.forEach(item=>{const icons=item.icons,oldLength=icons.pending.length;icons.pending=icons.pending.filter(icon=>{if(icon.prefix!==prefix)return!0;const name=icon.name;if(storage.icons[name])icons.loaded.push({provider,prefix,name});else{if(!storage.missing.has(name))return hasPending=!0,!0;icons.missing.push({provider,prefix,name})}return!1}),icons.pending.length!==oldLength&&(hasPending||removeCallback([storage],item.id),item.callback(icons.loaded.slice(0),icons.missing.slice(0),icons.pending.slice(0),item.abort))})}))}(storage)}))}function parseLoaderResponse(storage,icons,data){function checkMissing(){const pending=storage.pendingIcons;icons.forEach(name=>{pending&&pending.delete(name),storage.icons[name]||storage.missing.add(name)})}if(data&&"object"==typeof data)try{if(!addIconSet(storage,data).length)return void checkMissing()}catch(err){console.error(err)}checkMissing(),loadedNewIcons(storage)}function parsePossiblyAsyncResponse(response,callback){response instanceof Promise?response.then(data=>{callback(data)}).catch(()=>{callback(null)}):callback(response)}function loadNewIcons(storage,icons){storage.iconsToLoad?storage.iconsToLoad=storage.iconsToLoad.concat(icons).sort():storage.iconsToLoad=icons,storage.iconsQueueFlag||(storage.iconsQueueFlag=!0,setTimeout(()=>{storage.iconsQueueFlag=!1;const{provider,prefix}=storage,icons2=storage.iconsToLoad;if(delete storage.iconsToLoad,!icons2||!icons2.length)return;const customIconLoader=storage.loadIcon;if(storage.loadIcons&&(icons2.length>1||!customIconLoader))return void parsePossiblyAsyncResponse(storage.loadIcons(icons2,prefix,provider),data=>{parseLoaderResponse(storage,icons2,data)});if(customIconLoader)return void icons2.forEach(name=>{parsePossiblyAsyncResponse(customIconLoader(name,prefix,provider),data=>{parseLoaderResponse(storage,[name],data?{prefix,icons:{[name]:data}}:null)})});const{valid,invalid}=function checkIconNamesForAPI(icons){const valid=[],invalid=[];return icons.forEach(name=>{(name.match(matchIconName)?valid:invalid).push(name)}),{valid,invalid}}(icons2);if(invalid.length&&parseLoaderResponse(storage,invalid,null),!valid.length)return;const api=prefix.match(matchIconName)?getAPIModule(provider):null;if(!api)return void parseLoaderResponse(storage,valid,null);api.prepare(provider,prefix,valid).forEach(item=>{sendAPIQuery(provider,item,data=>{parseLoaderResponse(storage,item.icons,data)})})}))}const loadIcons=(icons,callback)=>{const cleanedIcons=function listToIcons(list,validate=!0,simpleNames=!1){const result=[];return list.forEach(item=>{const icon="string"==typeof item?stringToIcon(item,validate,simpleNames):item;icon&&result.push(icon)}),result}(icons,!0,allowSimpleNames()),sortedIcons=function sortIcons(icons){const result={loaded:[],missing:[],pending:[]},storage=Object.create(null);icons.sort((a,b)=>a.provider!==b.provider?a.provider.localeCompare(b.provider):a.prefix!==b.prefix?a.prefix.localeCompare(b.prefix):a.name.localeCompare(b.name));let lastIcon={provider:"",prefix:"",name:""};return icons.forEach(icon=>{if(lastIcon.name===icon.name&&lastIcon.prefix===icon.prefix&&lastIcon.provider===icon.provider)return;lastIcon=icon;const provider=icon.provider,prefix=icon.prefix,name=icon.name,providerStorage=storage[provider]||(storage[provider]=Object.create(null)),localStorage=providerStorage[prefix]||(providerStorage[prefix]=getStorage(provider,prefix));let list;list=name in localStorage.icons?result.loaded:""===prefix||localStorage.missing.has(name)?result.missing:result.pending;const item={provider,prefix,name};list.push(item)}),result}(cleanedIcons);if(!sortedIcons.pending.length){let callCallback=!0;return callback&&setTimeout(()=>{callCallback&&callback(sortedIcons.loaded,sortedIcons.missing,sortedIcons.pending,emptyCallback)}),()=>{callCallback=!1}}const newIcons=Object.create(null),sources=[];let lastProvider,lastPrefix;return sortedIcons.pending.forEach(icon=>{const{provider,prefix}=icon;if(prefix===lastPrefix&&provider===lastProvider)return;lastProvider=provider,lastPrefix=prefix,sources.push(getStorage(provider,prefix));const providerNewIcons=newIcons[provider]||(newIcons[provider]=Object.create(null));providerNewIcons[prefix]||(providerNewIcons[prefix]=[])}),sortedIcons.pending.forEach(icon=>{const{provider,prefix,name}=icon,storage=getStorage(provider,prefix),pendingQueue=storage.pendingIcons||(storage.pendingIcons=new Set);pendingQueue.has(name)||(pendingQueue.add(name),newIcons[provider][prefix].push(name))}),sources.forEach(storage=>{const list=newIcons[storage.provider][storage.prefix];list.length&&loadNewIcons(storage,list)}),callback?function storeCallback(callback,icons,pendingSources){const id=idCounter++,abort=removeCallback.bind(null,pendingSources,id);if(!icons.pending.length)return abort;const item={id,icons,callback,abort};return pendingSources.forEach(storage=>{(storage.loaderCallbacks||(storage.loaderCallbacks=[])).push(item)}),abort}(callback,sortedIcons,sources):emptyCallback};const separator=/[\s,]+/;function flipFromString(custom,flip){flip.split(separator).forEach(str=>{switch(str.trim()){case"horizontal":custom.hFlip=!0;break;case"vertical":custom.vFlip=!0}})}function rotateFromString(value,defaultValue=0){const units=value.replace(/^-?[0-9.]*/,"");function cleanup(value2){for(;value2<0;)value2+=4;return value2%4}if(""===units){const num=parseInt(value);return isNaN(num)?0:cleanup(num)}if(units!==value){let split=0;switch(units){case"%":split=25;break;case"deg":split=90}if(split){let num=parseFloat(value.slice(0,value.length-units.length));return isNaN(num)?0:(num/=split,num%1==0?cleanup(num):0)}}return defaultValue}let policy;function cleanUpInnerHTML(html){return void 0===policy&&function createPolicy(){try{policy=window.trustedTypes.createPolicy("iconify",{createHTML:s=>s})}catch(err){policy=null}}(),policy?policy.createHTML(html):html}const defaultExtendedIconCustomisations={...defaultIconCustomisations,inline:!1},svgDefaults={xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":!0,role:"img"},commonProps={display:"inline-block"},monotoneProps={backgroundColor:"currentColor"},coloredProps={backgroundColor:"transparent"},propsToAdd={Image:"var(--svg)",Repeat:"no-repeat",Size:"100% 100%"},propsToAddTo={WebkitMask:monotoneProps,mask:monotoneProps,background:coloredProps};for(const prefix in propsToAddTo){const list=propsToAddTo[prefix];for(const prop in propsToAdd)list[prefix+prop]=propsToAdd[prop]}const inlineDefaults={...defaultExtendedIconCustomisations,inline:!0};function fixSize(value){return value+(value.match(/^[-0-9.]+$/)?"px":"")}const render=(icon,props,name)=>{const defaultProps=props.inline?inlineDefaults:defaultExtendedIconCustomisations,customisations=function mergeCustomisations(defaults,item){const result={...defaults};for(const key in item){const value=item[key],valueType=typeof value;key in defaultIconSizeCustomisations?(null===value||value&&("string"===valueType||"number"===valueType))&&(result[key]=value):valueType===typeof result[key]&&(result[key]="rotate"===key?value%4:value)}return result}(defaultProps,props),mode=props.mode||"svg",style={},customStyle=props.style||{},componentProps={..."svg"===mode?svgDefaults:{}};if(name){const iconName=stringToIcon(name,!1,!0);if(iconName){const classNames=["iconify"],props=["provider","prefix"];for(const prop of props)iconName[prop]&&classNames.push("iconify--"+iconName[prop]);componentProps.className=classNames.join(" ")}}for(let key in props){const value=props[key];if(void 0!==value)switch(key){case"icon":case"style":case"children":case"onLoad":case"mode":case"ssr":break;case"_ref":componentProps.ref=value;break;case"className":componentProps[key]=(componentProps[key]?componentProps[key]+" ":"")+value;break;case"inline":case"hFlip":case"vFlip":customisations[key]=!0===value||"true"===value||1===value;break;case"flip":"string"==typeof value&&flipFromString(customisations,value);break;case"color":style.color=value;break;case"rotate":"string"==typeof value?customisations[key]=rotateFromString(value):"number"==typeof value&&(customisations[key]=value);break;case"ariaHidden":case"aria-hidden":!0!==value&&"true"!==value&&delete componentProps["aria-hidden"];break;default:void 0===defaultProps[key]&&(componentProps[key]=value)}}const item=function iconToSVG(icon,customisations){const fullIcon={...defaultIconProps,...icon},fullCustomisations={...defaultIconCustomisations,...customisations},box={left:fullIcon.left,top:fullIcon.top,width:fullIcon.width,height:fullIcon.height};let body=fullIcon.body;[fullIcon,fullCustomisations].forEach(props=>{const transformations=[],hFlip=props.hFlip,vFlip=props.vFlip;let tempValue,rotation=props.rotate;switch(hFlip?vFlip?rotation+=2:(transformations.push("translate("+(box.width+box.left).toString()+" "+(0-box.top).toString()+")"),transformations.push("scale(-1 1)"),box.top=box.left=0):vFlip&&(transformations.push("translate("+(0-box.left).toString()+" "+(box.height+box.top).toString()+")"),transformations.push("scale(1 -1)"),box.top=box.left=0),rotation<0&&(rotation-=4*Math.floor(rotation/4)),rotation%=4,rotation){case 1:tempValue=box.height/2+box.top,transformations.unshift("rotate(90 "+tempValue.toString()+" "+tempValue.toString()+")");break;case 2:transformations.unshift("rotate(180 "+(box.width/2+box.left).toString()+" "+(box.height/2+box.top).toString()+")");break;case 3:tempValue=box.width/2+box.left,transformations.unshift("rotate(-90 "+tempValue.toString()+" "+tempValue.toString()+")")}rotation%2==1&&(box.left!==box.top&&(tempValue=box.left,box.left=box.top,box.top=tempValue),box.width!==box.height&&(tempValue=box.width,box.width=box.height,box.height=tempValue)),transformations.length&&(body=function wrapSVGContent(body,start,end){const split=function splitSVGDefs(content,tag="defs"){let defs="";const index=content.indexOf("<"+tag);for(;index>=0;){const start=content.indexOf(">",index),end=content.indexOf("</"+tag);if(-1===start||-1===end)break;const endEnd=content.indexOf(">",end);if(-1===endEnd)break;defs+=content.slice(start+1,end).trim(),content=content.slice(0,index).trim()+content.slice(endEnd+1)}return{defs,content}}(body);return function mergeDefsAndContent(defs,content){return defs?"<defs>"+defs+"</defs>"+content:content}(split.defs,start+split.content+end)}(body,'<g transform="'+transformations.join(" ")+'">',"</g>"))});const customisationsWidth=fullCustomisations.width,customisationsHeight=fullCustomisations.height,boxWidth=box.width,boxHeight=box.height;let width,height;null===customisationsWidth?(height=null===customisationsHeight?"1em":"auto"===customisationsHeight?boxHeight:customisationsHeight,width=calculateSize(height,boxWidth/boxHeight)):(width="auto"===customisationsWidth?boxWidth:customisationsWidth,height=null===customisationsHeight?calculateSize(width,boxHeight/boxWidth):"auto"===customisationsHeight?boxHeight:customisationsHeight);const attributes={},setAttr=(prop,value)=>{(value=>"unset"===value||"undefined"===value||"none"===value)(value)||(attributes[prop]=value.toString())};setAttr("width",width),setAttr("height",height);const viewBox=[box.left,box.top,boxWidth,boxHeight];return attributes.viewBox=viewBox.join(" "),{attributes,viewBox,body}}(icon,customisations),renderAttribs=item.attributes;if(customisations.inline&&(style.verticalAlign="-0.125em"),"svg"===mode){componentProps.style={...style,...customStyle},Object.assign(componentProps,renderAttribs);let localCounter=0,id=props.id;return"string"==typeof id&&(id=id.replace(/-/g,"_")),componentProps.dangerouslySetInnerHTML={__html:cleanUpInnerHTML(replaceIDs(item.body,id?()=>id+"ID"+localCounter++:"iconifyReact"))},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg",componentProps)}const{body,width,height}=icon,useMask="mask"===mode||"bg"!==mode&&-1!==body.indexOf("currentColor"),html=function iconToHTML(body,attributes){let renderAttribsHTML=-1===body.indexOf("xlink:")?"":' xmlns:xlink="http://www.w3.org/1999/xlink"';for(const attr in attributes)renderAttribsHTML+=" "+attr+'="'+attributes[attr]+'"';return'<svg xmlns="http://www.w3.org/2000/svg"'+renderAttribsHTML+">"+body+"</svg>"}(body,{...renderAttribs,width:width+"",height:height+""});var svg;return componentProps.style={...style,"--svg":(svg=html,'url("'+function svgToData(svg){return"data:image/svg+xml,"+function encodeSVGforURL(svg){return svg.replace(/"/g,"'").replace(/%/g,"%25").replace(/#/g,"%23").replace(/</g,"%3C").replace(/>/g,"%3E").replace(/\s+/g," ")}(svg)}(svg)+'")'),width:fixSize(renderAttribs.width),height:fixSize(renderAttribs.height),...commonProps,...useMask?monotoneProps:coloredProps,...customStyle},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span",componentProps)};if(allowSimpleNames(!0),setAPIModule("",fetchAPIModule),"undefined"!=typeof document&&"undefined"!=typeof window){const _window=window;if(void 0!==_window.IconifyPreload){const preload=_window.IconifyPreload,err="Invalid IconifyPreload syntax.";"object"==typeof preload&&null!==preload&&(preload instanceof Array?preload:[preload]).forEach(item=>{try{("object"!=typeof item||null===item||item instanceof Array||"object"!=typeof item.icons||"string"!=typeof item.prefix||!addCollection(item))&&console.error(err)}catch(e){console.error(err)}})}if(void 0!==_window.IconifyProviders){const providers=_window.IconifyProviders;if("object"==typeof providers&&null!==providers)for(let key in providers){const err="IconifyProviders["+key+"] is invalid.";try{const value=providers[key];if("object"!=typeof value||!value||void 0===value.resources)continue;addAPIProvider(key,value)||console.error(err)}catch(e){console.error(err)}}}}function IconComponent(props){const[mounted,setMounted]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!props.ssr),[abort,setAbort]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});const[state,setState]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function getInitialState(mounted){if(mounted){const name=props.icon;if("object"==typeof name)return{name:"",data:name};const data=getIconData(name);if(data)return{name,data}}return{name:""}}(!!props.ssr));function cleanup(){const callback=abort.callback;callback&&(callback(),setAbort({}))}function changeState(newState){if(JSON.stringify(state)!==JSON.stringify(newState))return cleanup(),setState(newState),!0}function updateState(){var _a;const name=props.icon;if("object"==typeof name)return void changeState({name:"",data:name});const data=getIconData(name);if(changeState({name,data}))if(void 0===data){const callback=loadIcons([name],updateState);setAbort({callback})}else data&&(null===(_a=props.onLoad)||void 0===_a||_a.call(props,name))}(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>(setMounted(!0),cleanup),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{mounted&&updateState()},[props.icon,mounted]);const{name,data}=state;return data?render({...defaultIconProps,...data},props,name):props.children?props.children:props.fallback?props.fallback:(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("span",{})}const Icon=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props,ref)=>IconComponent({...props,_ref:ref}));(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props,ref)=>IconComponent({inline:!0,...props,_ref:ref}))}}]);