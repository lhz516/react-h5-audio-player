"use strict";(self.webpackChunkreact_h5_audio_player=self.webpackChunkreact_h5_audio_player||[]).push([[990],{"./src/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>RHAP_UI,A:()=>src});var react=__webpack_require__("./node_modules/react/index.js"),iconify=__webpack_require__("./node_modules/@iconify/react/dist/iconify.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");const getMainLayoutClassName=layout=>{switch(layout){case"stacked":default:return"rhap_stacked";case"stacked-reverse":return"rhap_stacked-reverse";case"horizontal":return"rhap_horizontal";case"horizontal-reverse":return"rhap_horizontal-reverse"}},getPosX=event=>event instanceof MouseEvent?event.clientX:event.touches[0].clientX,addHeadingZero=num=>num>9?num.toString():`0${num}`,getDisplayTimeBySeconds=(seconds,totalSeconds,timeFormat)=>{if(!isFinite(seconds))return null;const min=Math.floor(seconds/60),minStr=addHeadingZero(min),secStr=addHeadingZero(Math.floor(seconds%60)),minStrForHour=addHeadingZero(Math.floor(min%60)),mmSs=`${minStr}:${secStr}`,hhMmSs=`${Math.floor(min/60)}:${minStrForHour}:${secStr}`;return"auto"===timeFormat?totalSeconds>=3600?hhMmSs:mmSs:"mm:ss"===timeFormat?mmSs:"hh:mm:ss"===timeFormat?hhMmSs:void 0};function throttle(func,limit){let inThrottle=!1;return arg=>{inThrottle||(func(arg),inThrottle=!0,setTimeout(()=>inThrottle=!1,limit))}}class ProgressBar extends react.Component{timeOnMouseMove=0;hasAddedAudioEventListener=!1;state={isDraggingProgress:!1,currentTimePos:"0%",hasDownloadProgressAnimation:!1,downloadProgressArr:[],waitingForSeekCallback:!1};getDuration(){const{audio,srcDuration}=this.props;return void 0===srcDuration?audio.duration:srcDuration}getCurrentProgress=event=>{const{audio,progressBar}=this.props;if(0!==audio.src.indexOf("blob:")&&void 0===this.props.srcDuration&&(!audio.src||!isFinite(audio.currentTime)||!progressBar.current))return{currentTime:0,currentTimePos:"0%"};const progressBarRect=progressBar.current.getBoundingClientRect(),maxRelativePos=progressBarRect.width;let relativePos=getPosX(event)-progressBarRect.left;relativePos<0?relativePos=0:relativePos>maxRelativePos&&(relativePos=maxRelativePos);return{currentTime:this.getDuration()*relativePos/maxRelativePos,currentTimePos:`${(relativePos/maxRelativePos*100).toFixed(2)}%`}};handleContextMenu=event=>{event.preventDefault()};handleMouseDownOrTouchStartProgressBar=event=>{event.stopPropagation();const{currentTime,currentTimePos}=this.getCurrentProgress(event.nativeEvent);isFinite(currentTime)&&(this.timeOnMouseMove=currentTime,this.setState({isDraggingProgress:!0,currentTimePos}),event.nativeEvent instanceof MouseEvent?(window.addEventListener("mousemove",this.handleWindowMouseOrTouchMove),window.addEventListener("mouseup",this.handleWindowMouseOrTouchUp)):(window.addEventListener("touchmove",this.handleWindowMouseOrTouchMove),window.addEventListener("touchend",this.handleWindowMouseOrTouchUp)))};handleWindowMouseOrTouchMove=event=>{event instanceof MouseEvent&&event.preventDefault(),event.stopPropagation();const windowSelection=window.getSelection();windowSelection&&"Range"===windowSelection.type&&windowSelection.empty();const{isDraggingProgress}=this.state;if(isDraggingProgress){const{currentTime,currentTimePos}=this.getCurrentProgress(event);this.timeOnMouseMove=currentTime,this.setState({currentTimePos})}};handleWindowMouseOrTouchUp=event=>{event.stopPropagation();const newTime=this.timeOnMouseMove,{audio,onChangeCurrentTimeError,onSeek}=this.props;if(onSeek)this.setState({isDraggingProgress:!1,waitingForSeekCallback:!0},()=>{onSeek(audio,newTime).then(()=>this.setState({waitingForSeekCallback:!1}),err=>{const message=err instanceof Error?err.message:String(err);throw new Error(message)})});else{const newProps={isDraggingProgress:!1};if(audio.readyState===audio.HAVE_NOTHING||audio.readyState===audio.HAVE_METADATA||!isFinite(newTime))try{audio.load()}catch(err){return newProps.currentTimePos="0%",onChangeCurrentTimeError&&onChangeCurrentTimeError(err)}audio.currentTime=newTime,this.setState(newProps)}event instanceof MouseEvent?(window.removeEventListener("mousemove",this.handleWindowMouseOrTouchMove),window.removeEventListener("mouseup",this.handleWindowMouseOrTouchUp)):(window.removeEventListener("touchmove",this.handleWindowMouseOrTouchMove),window.removeEventListener("touchend",this.handleWindowMouseOrTouchUp))};handleAudioTimeUpdate=throttle(e=>{const{isDraggingProgress}=this.state,audio=e.target;if(isDraggingProgress||!0===this.state.waitingForSeekCallback)return;const{currentTime}=audio,duration=this.getDuration();this.setState({currentTimePos:`${(currentTime/duration*100||0).toFixed(2)}%`})},this.props.progressUpdateInterval);handleAudioDownloadProgressUpdate=e=>{const audio=e.target,duration=this.getDuration(),downloadProgressArr=[];for(let i=0;i<audio.buffered.length;i++){const bufferedStart=audio.buffered.start(i),bufferedEnd=audio.buffered.end(i);downloadProgressArr.push({left:`${Math.round(100/duration*bufferedStart)||0}%`,width:`${Math.round(100/duration*(bufferedEnd-bufferedStart))||0}%`})}clearTimeout(this.downloadProgressAnimationTimer),this.setState({downloadProgressArr,hasDownloadProgressAnimation:!0}),this.downloadProgressAnimationTimer=setTimeout(()=>{this.setState({hasDownloadProgressAnimation:!1})},200)};initialize(){const{audio}=this.props;audio&&!this.hasAddedAudioEventListener&&(this.audio=audio,this.hasAddedAudioEventListener=!0,audio.addEventListener("timeupdate",this.handleAudioTimeUpdate),audio.addEventListener("progress",this.handleAudioDownloadProgressUpdate))}componentDidMount(){this.initialize()}componentDidUpdate(){this.initialize()}componentWillUnmount(){this.audio&&this.hasAddedAudioEventListener&&(this.audio.removeEventListener("timeupdate",this.handleAudioTimeUpdate),this.audio.removeEventListener("progress",this.handleAudioDownloadProgressUpdate)),clearTimeout(this.downloadProgressAnimationTimer)}render(){const{showDownloadProgress,showFilledProgress,progressBar,i18nProgressBar}=this.props,{currentTimePos,downloadProgressArr,hasDownloadProgressAnimation}=this.state;return react.createElement("div",{className:"rhap_progress-container",ref:progressBar,"aria-label":i18nProgressBar,role:"progressbar","aria-valuemin":0,"aria-valuemax":100,"aria-valuenow":Number(currentTimePos.split("%")[0]),tabIndex:0,onMouseDown:this.handleMouseDownOrTouchStartProgressBar,onTouchStart:this.handleMouseDownOrTouchStartProgressBar,onContextMenu:this.handleContextMenu},react.createElement("div",{className:"rhap_progress-bar "+(showDownloadProgress?"rhap_progress-bar-show-download":"")},react.createElement("div",{className:"rhap_progress-indicator",style:{left:currentTimePos}}),showFilledProgress&&react.createElement("div",{className:"rhap_progress-filled",style:{width:currentTimePos}}),showDownloadProgress&&downloadProgressArr.map(({left,width},i)=>react.createElement("div",{key:i,className:"rhap_download-progress",style:{left,width,transitionDuration:hasDownloadProgressAnimation?".2s":"0s"}}))))}}const ProgressBarForwardRef=(props,ref)=>react.createElement(ProgressBar,(0,esm_extends.A)({},props,{progressBar:ref})),src_ProgressBar=(0,react.forwardRef)(ProgressBarForwardRef);ProgressBar.__docgenInfo={description:"",methods:[{name:"getDuration",docblock:null,modifiers:[],params:[],returns:{type:{name:"number"}}},{name:"getCurrentProgress",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"MouseEvent | TouchEvent",elements:[{name:"MouseEvent"},{name:"TouchEvent"}]}}],returns:{type:{name:"TimePosInfo"}}},{name:"handleContextMenu",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"SyntheticEvent",alias:"SyntheticEvent"}}],returns:{type:{name:"void"}}},{name:"handleMouseDownOrTouchStartProgressBar",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"React.MouseEvent | React.TouchEvent",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent"},{name:"ReactTouchEvent",raw:"React.TouchEvent"}]}}],returns:{type:{name:"void"}}},{name:"handleWindowMouseOrTouchMove",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"TouchEvent | MouseEvent",elements:[{name:"TouchEvent"},{name:"MouseEvent"}]}}],returns:{type:{name:"void"}}},{name:"handleWindowMouseOrTouchUp",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"MouseEvent | TouchEvent",elements:[{name:"MouseEvent"},{name:"TouchEvent"}]}}],returns:{type:{name:"void"}}},{name:"handleAudioDownloadProgressUpdate",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"initialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}}],displayName:"ProgressBar",props:{audio:{required:!0,tsType:{name:"HTMLAudioElement"},description:""},progressUpdateInterval:{required:!0,tsType:{name:"number"},description:""},showDownloadProgress:{required:!0,tsType:{name:"boolean"},description:""},showFilledProgress:{required:!0,tsType:{name:"boolean"},description:""},srcDuration:{required:!1,tsType:{name:"number"},description:""},onSeek:{required:!1,tsType:{name:"signature",type:"function",raw:"(audio: HTMLAudioElement, time: number) => Promise<void>",signature:{arguments:[{type:{name:"HTMLAudioElement"},name:"audio"},{type:{name:"number"},name:"time"}],return:{name:"Promise",elements:[{name:"void"}],raw:"Promise<void>"}}},description:""},onChangeCurrentTimeError:{required:!1,tsType:{name:"signature",type:"function",raw:"(err: Error) => void",signature:{arguments:[{type:{name:"Error"},name:"err"}],return:{name:"void"}}},description:""},i18nProgressBar:{required:!0,tsType:{name:"string"},description:""},progressBar:{required:!0,tsType:{name:"ReactRefObject",raw:"React.RefObject<HTMLDivElement>",elements:[{name:"HTMLDivElement"}]},description:""}}},ProgressBarForwardRef.__docgenInfo={description:"",methods:[],displayName:"ProgressBarForwardRef",props:{audio:{required:!0,tsType:{name:"HTMLAudioElement"},description:""},progressUpdateInterval:{required:!0,tsType:{name:"number"},description:""},showDownloadProgress:{required:!0,tsType:{name:"boolean"},description:""},showFilledProgress:{required:!0,tsType:{name:"boolean"},description:""},srcDuration:{required:!1,tsType:{name:"number"},description:""},onSeek:{required:!1,tsType:{name:"signature",type:"function",raw:"(audio: HTMLAudioElement, time: number) => Promise<void>",signature:{arguments:[{type:{name:"HTMLAudioElement"},name:"audio"},{type:{name:"number"},name:"time"}],return:{name:"Promise",elements:[{name:"void"}],raw:"Promise<void>"}}},description:""},onChangeCurrentTimeError:{required:!1,tsType:{name:"signature",type:"function",raw:"(err: Error) => void",signature:{arguments:[{type:{name:"Error"},name:"err"}],return:{name:"void"}}},description:""},i18nProgressBar:{required:!0,tsType:{name:"string"},description:""}}};class CurrentTime extends react.PureComponent{hasAddedAudioEventListener=!1;constructor(props){super(props);const{audio,defaultCurrentTime,isLeftTime,timeFormat}=props;let currentTime=defaultCurrentTime;audio&&(currentTime=getDisplayTimeBySeconds(isLeftTime?audio.duration-audio.currentTime:audio.currentTime,audio.duration,timeFormat)),this.state={currentTime}}state={currentTime:this.props.defaultCurrentTime};handleAudioCurrentTimeChange=e=>{const audio=e.target,{isLeftTime,timeFormat,defaultCurrentTime}=this.props;this.setState({currentTime:getDisplayTimeBySeconds(isLeftTime?audio.duration-audio.currentTime:audio.currentTime,audio.duration,timeFormat)||defaultCurrentTime})};addAudioEventListeners=()=>{const{audio}=this.props;audio&&!this.hasAddedAudioEventListener&&(this.audio=audio,this.hasAddedAudioEventListener=!0,audio.addEventListener("timeupdate",this.handleAudioCurrentTimeChange),audio.addEventListener("loadedmetadata",this.handleAudioCurrentTimeChange))};componentDidMount(){this.addAudioEventListeners()}componentDidUpdate(){this.addAudioEventListeners()}componentWillUnmount(){this.audio&&this.hasAddedAudioEventListener&&(this.audio.removeEventListener("timeupdate",this.handleAudioCurrentTimeChange),this.audio.removeEventListener("loadedmetadata",this.handleAudioCurrentTimeChange))}render(){return this.state.currentTime}}const src_CurrentTime=CurrentTime;CurrentTime.__docgenInfo={description:"",methods:[{name:"handleAudioCurrentTimeChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"addAudioEventListeners",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}}],displayName:"CurrentTime",props:{audio:{required:!1,tsType:{name:"HTMLAudioElement"},description:""},defaultCurrentTime:{required:!0,tsType:{name:"ReactNode"},description:""},isLeftTime:{required:!0,tsType:{name:"boolean"},description:""},timeFormat:{required:!0,tsType:{name:"union",raw:"'auto' | 'mm:ss' | 'hh:mm:ss'",elements:[{name:"literal",value:"'auto'"},{name:"literal",value:"'mm:ss'"},{name:"literal",value:"'hh:mm:ss'"}]},description:""}}};class Duration extends react.PureComponent{hasAddedAudioEventListener=!1;constructor(props){super(props);const{audio,timeFormat,defaultDuration}=props;this.state={duration:audio?getDisplayTimeBySeconds(audio.duration,audio.duration,timeFormat):defaultDuration}}state={duration:this.props.audio?getDisplayTimeBySeconds(this.props.audio.duration,this.props.audio.duration,this.props.timeFormat):this.props.defaultDuration};handleAudioDurationChange=e=>{const audio=e.target,{timeFormat,defaultDuration}=this.props;this.setState({duration:getDisplayTimeBySeconds(audio.duration,audio.duration,timeFormat)||defaultDuration})};addAudioEventListeners=()=>{const{audio}=this.props;audio&&!this.hasAddedAudioEventListener&&(this.audio=audio,this.hasAddedAudioEventListener=!0,audio.addEventListener("durationchange",this.handleAudioDurationChange),audio.addEventListener("abort",this.handleAudioDurationChange))};componentDidMount(){this.addAudioEventListeners()}componentDidUpdate(){this.addAudioEventListeners()}componentWillUnmount(){this.audio&&this.hasAddedAudioEventListener&&(this.audio.removeEventListener("durationchange",this.handleAudioDurationChange),this.audio.removeEventListener("abort",this.handleAudioDurationChange))}render(){return this.state.duration}}const src_Duration=Duration;Duration.__docgenInfo={description:"",methods:[{name:"handleAudioDurationChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"addAudioEventListeners",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}}],displayName:"Duration",props:{audio:{required:!1,tsType:{name:"HTMLAudioElement"},description:""},defaultDuration:{required:!0,tsType:{name:"ReactNode"},description:""},timeFormat:{required:!0,tsType:{name:"union",raw:"'auto' | 'mm:ss' | 'hh:mm:ss'",elements:[{name:"literal",value:"'auto'"},{name:"literal",value:"'mm:ss'"},{name:"literal",value:"'hh:mm:ss'"}]},description:""}}};class VolumeControls extends react.Component{hasAddedAudioEventListener=!1;volumeBar=(0,react.createRef)();volumeAnimationTimer=0;lastVolume=this.props.volume;state={currentVolumePos:`${(this.lastVolume/1*100||0).toFixed(2)}%`,hasVolumeAnimation:!1,isDraggingVolume:!1};getCurrentVolume=event=>{const{audio}=this.props;if(!this.volumeBar.current)return{currentVolume:audio.volume,currentVolumePos:this.state.currentVolumePos};const volumeBarRect=this.volumeBar.current.getBoundingClientRect(),maxRelativePos=volumeBarRect.width,relativePos=getPosX(event)-volumeBarRect.left;let currentVolume,currentVolumePos;return relativePos<0?(currentVolume=0,currentVolumePos="0%"):relativePos>volumeBarRect.width?(currentVolume=1,currentVolumePos="100%"):(currentVolume=relativePos/maxRelativePos,currentVolumePos=relativePos/maxRelativePos*100+"%"),{currentVolume,currentVolumePos}};handleContextMenu=event=>{event.preventDefault()};handleClickVolumeButton=()=>{const{audio}=this.props;audio.volume>0?(this.lastVolume=audio.volume,audio.volume=0):audio.volume=this.lastVolume};handleVolumnControlMouseOrTouchDown=event=>{event.stopPropagation();const{audio}=this.props,{currentVolume,currentVolumePos}=this.getCurrentVolume(event.nativeEvent);audio.volume=currentVolume,this.setState({isDraggingVolume:!0,currentVolumePos}),event.nativeEvent instanceof MouseEvent?(window.addEventListener("mousemove",this.handleWindowMouseOrTouchMove),window.addEventListener("mouseup",this.handleWindowMouseOrTouchUp)):(window.addEventListener("touchmove",this.handleWindowMouseOrTouchMove),window.addEventListener("touchend",this.handleWindowMouseOrTouchUp))};handleWindowMouseOrTouchMove=event=>{event instanceof MouseEvent&&event.preventDefault(),event.stopPropagation();const{audio}=this.props,windowSelection=window.getSelection();windowSelection&&"Range"===windowSelection.type&&windowSelection.empty();const{isDraggingVolume}=this.state;if(isDraggingVolume){const{currentVolume,currentVolumePos}=this.getCurrentVolume(event);audio.volume=currentVolume,this.setState({currentVolumePos})}};handleWindowMouseOrTouchUp=event=>{event.stopPropagation(),this.setState({isDraggingVolume:!1}),event instanceof MouseEvent?(window.removeEventListener("mousemove",this.handleWindowMouseOrTouchMove),window.removeEventListener("mouseup",this.handleWindowMouseOrTouchUp)):(window.removeEventListener("touchmove",this.handleWindowMouseOrTouchMove),window.removeEventListener("touchend",this.handleWindowMouseOrTouchUp))};handleAudioVolumeChange=e=>{const{isDraggingVolume}=this.state,{volume}=e.target;(this.lastVolume>0&&0===volume||0===this.lastVolume&&volume>0)&&this.props.onMuteChange(),this.lastVolume=volume,isDraggingVolume||(this.setState({hasVolumeAnimation:!0,currentVolumePos:`${(volume/1*100||0).toFixed(2)}%`}),clearTimeout(this.volumeAnimationTimer),this.volumeAnimationTimer=setTimeout(()=>{this.setState({hasVolumeAnimation:!1})},100))};componentDidUpdate(){const{audio}=this.props;audio&&!this.hasAddedAudioEventListener&&(this.audio=audio,this.hasAddedAudioEventListener=!0,audio.addEventListener("volumechange",this.handleAudioVolumeChange))}componentWillUnmount(){this.audio&&this.hasAddedAudioEventListener&&this.audio.removeEventListener("volumechange",this.handleAudioVolumeChange),clearTimeout(this.volumeAnimationTimer)}render(){const{audio,showFilledVolume,i18nVolumeControl}=this.props,{currentVolumePos,hasVolumeAnimation}=this.state,{volume}=audio||{};return react.createElement("div",{ref:this.volumeBar,onMouseDown:this.handleVolumnControlMouseOrTouchDown,onTouchStart:this.handleVolumnControlMouseOrTouchDown,onContextMenu:this.handleContextMenu,role:"progressbar","aria-label":i18nVolumeControl,"aria-valuemin":0,"aria-valuemax":100,"aria-valuenow":Number((100*volume).toFixed(0)),tabIndex:0,className:"rhap_volume-bar-area"},react.createElement("div",{className:"rhap_volume-bar"},react.createElement("div",{className:"rhap_volume-indicator",style:{left:currentVolumePos,transitionDuration:hasVolumeAnimation?".1s":"0s"}}),showFilledVolume&&react.createElement("div",{className:"rhap_volume-filled",style:{width:currentVolumePos}})))}}const VolumeBar=VolumeControls;VolumeControls.__docgenInfo={description:"",methods:[{name:"getCurrentVolume",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"TouchEvent | MouseEvent",elements:[{name:"TouchEvent"},{name:"MouseEvent"}]}}],returns:{type:{name:"VolumePosInfo"}}},{name:"handleContextMenu",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"SyntheticEvent",alias:"SyntheticEvent"}}],returns:{type:{name:"void"}}},{name:"handleClickVolumeButton",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleVolumnControlMouseOrTouchDown",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"React.MouseEvent | React.TouchEvent",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent"},{name:"ReactTouchEvent",raw:"React.TouchEvent"}]}}],returns:{type:{name:"void"}}},{name:"handleWindowMouseOrTouchMove",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"TouchEvent | MouseEvent",elements:[{name:"TouchEvent"},{name:"MouseEvent"}]}}],returns:{type:{name:"void"}}},{name:"handleWindowMouseOrTouchUp",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"union",raw:"MouseEvent | TouchEvent",elements:[{name:"MouseEvent"},{name:"TouchEvent"}]}}],returns:{type:{name:"void"}}},{name:"handleAudioVolumeChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}}],displayName:"VolumeControls",props:{audio:{required:!0,tsType:{name:"HTMLAudioElement"},description:""},volume:{required:!0,tsType:{name:"number"},description:""},onMuteChange:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},showFilledVolume:{required:!0,tsType:{name:"boolean"},description:""},i18nVolumeControl:{required:!0,tsType:{name:"string"},description:""}}};let RHAP_UI=function(RHAP_UI){return RHAP_UI.CURRENT_TIME="CURRENT_TIME",RHAP_UI.CURRENT_LEFT_TIME="CURRENT_LEFT_TIME",RHAP_UI.PROGRESS_BAR="PROGRESS_BAR",RHAP_UI.DURATION="DURATION",RHAP_UI.ADDITIONAL_CONTROLS="ADDITIONAL_CONTROLS",RHAP_UI.MAIN_CONTROLS="MAIN_CONTROLS",RHAP_UI.VOLUME_CONTROLS="VOLUME_CONTROLS",RHAP_UI.LOOP="LOOP",RHAP_UI.VOLUME="VOLUME",RHAP_UI}({});class H5AudioPlayer extends react.Component{static defaultI18nAriaLabels={player:"Audio player",progressControl:"Audio progress control",volumeControl:"Volume control",play:"Play",pause:"Pause",rewind:"Rewind",forward:"Forward",previous:"Previous",next:"Skip",loop:"Disable loop",loopOff:"Enable loop",volume:"Mute",volumeMute:"Unmute"};static defaultProps={progressJumpSteps:{backward:5e3,forward:5e3},progressJumpStep:5e3};audio=(0,react.createRef)();progressBar=(0,react.createRef)();container=(0,react.createRef)();lastVolume=this.props.volume??1;togglePlay=e=>{e.stopPropagation();const audio=this.audio.current;(audio.paused||audio.ended)&&audio.src?this.playAudioPromise():audio.paused||audio.pause()};playAudioPromise=()=>{this.audio.current.error&&this.audio.current.load();const playPromise=this.audio.current.play();playPromise?playPromise.then(null).catch(err=>{const{onPlayError}=this.props,message=err instanceof Error?err.message:String(err);onPlayError&&onPlayError(new Error(message))}):this.forceUpdate()};isPlaying=()=>{const audio=this.audio.current;return!!audio&&(!audio.paused&&!audio.ended)};handlePlay=e=>{this.forceUpdate(),this.props.onPlay&&this.props.onPlay(e)};handlePause=e=>{this.audio&&(this.forceUpdate(),this.props.onPause&&this.props.onPause(e))};handleEnded=e=>{this.audio&&(this.forceUpdate(),this.props.onEnded&&this.props.onEnded(e))};handleAbort=e=>{this.props.onAbort&&this.props.onAbort(e)};handleClickVolumeButton=()=>{const audio=this.audio.current;audio.volume>0?(this.lastVolume=audio.volume,audio.volume=0):audio.volume=this.lastVolume};handleMuteChange=()=>{this.forceUpdate()};handleClickLoopButton=()=>{this.audio.current.loop=!this.audio.current.loop,this.forceUpdate()};handleClickRewind=()=>{const{progressJumpSteps,progressJumpStep}=this.props,jumpStep=progressJumpSteps.backward||progressJumpStep;this.setJumpTime(-jumpStep)};handleClickForward=()=>{const{progressJumpSteps,progressJumpStep}=this.props,jumpStep=progressJumpSteps.forward||progressJumpStep;this.setJumpTime(jumpStep)};setJumpTime=time=>{const audio=this.audio.current,{duration,currentTime:prevTime}=audio;if(audio.readyState===audio.HAVE_NOTHING||audio.readyState===audio.HAVE_METADATA||!isFinite(duration)||!isFinite(prevTime))try{audio.load()}catch(err){return this.props.onChangeCurrentTimeError&&this.props.onChangeCurrentTimeError(err)}let currentTime=prevTime+time/1e3;currentTime<0?(audio.currentTime=0,currentTime=0):currentTime>duration?(audio.currentTime=duration,currentTime=duration):audio.currentTime=currentTime};setJumpVolume=volume=>{let newVolume=this.audio.current.volume+volume;newVolume<0?newVolume=0:newVolume>1&&(newVolume=1),this.audio.current.volume=newVolume};handleKeyDown=e=>{if(this.props.hasDefaultKeyBindings??1)switch(e.key){case" ":e.target!==this.container.current&&e.target!==this.progressBar.current||(e.preventDefault(),this.togglePlay(e));break;case"ArrowLeft":this.handleClickRewind();break;case"ArrowRight":this.handleClickForward();break;case"ArrowUp":e.preventDefault(),this.setJumpVolume(this.props.volumeJumpStep);break;case"ArrowDown":e.preventDefault(),this.setJumpVolume(-this.props.volumeJumpStep);break;case"l":this.handleClickLoopButton();break;case"m":this.handleClickVolumeButton()}};renderUIModules=modules=>modules.map((comp,i)=>this.renderUIModule(comp,i));renderUIModule=(comp,key)=>{const{defaultCurrentTime="--:--",progressUpdateInterval=20,showDownloadProgress=!0,showFilledProgress=!0,showFilledVolume=!1,defaultDuration="--:--",customIcons={},showSkipControls=!1,onClickPrevious,onClickNext,onChangeCurrentTimeError,showJumpControls=!0,customAdditionalControls=[RHAP_UI.LOOP],customVolumeControls=[RHAP_UI.VOLUME],muted=!1,timeFormat="auto",volume:volumeProp=1,loop:loopProp=!1,mse,i18nAriaLabels=H5AudioPlayer.defaultI18nAriaLabels}=this.props;switch(comp){case RHAP_UI.CURRENT_TIME:return react.createElement("div",{key,id:"rhap_current-time",className:"rhap_time rhap_current-time"},react.createElement(src_CurrentTime,{audio:this.audio.current,isLeftTime:!1,defaultCurrentTime,timeFormat}));case RHAP_UI.CURRENT_LEFT_TIME:return react.createElement("div",{key,id:"rhap_current-left-time",className:"rhap_time rhap_current-left-time"},react.createElement(src_CurrentTime,{audio:this.audio.current,isLeftTime:!0,defaultCurrentTime,timeFormat}));case RHAP_UI.PROGRESS_BAR:return react.createElement(src_ProgressBar,{key,ref:this.progressBar,audio:this.audio.current,progressUpdateInterval,showDownloadProgress,showFilledProgress,onSeek:mse&&mse.onSeek,onChangeCurrentTimeError,srcDuration:mse&&mse.srcDuration,i18nProgressBar:i18nAriaLabels.progressControl});case RHAP_UI.DURATION:return react.createElement("div",{key,className:"rhap_time rhap_total-time"},mse&&mse.srcDuration?getDisplayTimeBySeconds(mse.srcDuration,mse.srcDuration,this.props.timeFormat):react.createElement(src_Duration,{audio:this.audio.current,defaultDuration,timeFormat}));case RHAP_UI.ADDITIONAL_CONTROLS:return react.createElement("div",{key,className:"rhap_additional-controls"},this.renderUIModules(customAdditionalControls));case RHAP_UI.MAIN_CONTROLS:{const isPlaying=this.isPlaying();let actionIcon;return actionIcon=isPlaying?customIcons.pause?customIcons.pause:react.createElement(iconify.In,{icon:"mdi:pause-circle"}):customIcons.play?customIcons.play:react.createElement(iconify.In,{icon:"mdi:play-circle"}),react.createElement("div",{key,className:"rhap_main-controls"},showSkipControls&&react.createElement("button",{"aria-label":i18nAriaLabels.previous,className:"rhap_button-clear rhap_main-controls-button rhap_skip-button",type:"button",onClick:onClickPrevious},customIcons.previous?customIcons.previous:react.createElement(iconify.In,{icon:"mdi:skip-previous"})),showJumpControls&&react.createElement("button",{"aria-label":i18nAriaLabels.rewind,className:"rhap_button-clear rhap_main-controls-button rhap_rewind-button",type:"button",onClick:this.handleClickRewind},customIcons.rewind?customIcons.rewind:react.createElement(iconify.In,{icon:"mdi:rewind"})),react.createElement("button",{"aria-label":isPlaying?i18nAriaLabels.pause:i18nAriaLabels.play,className:"rhap_button-clear rhap_main-controls-button rhap_play-pause-button",type:"button",onClick:this.togglePlay},actionIcon),showJumpControls&&react.createElement("button",{"aria-label":i18nAriaLabels.forward,className:"rhap_button-clear rhap_main-controls-button rhap_forward-button",type:"button",onClick:this.handleClickForward},customIcons.forward?customIcons.forward:react.createElement(iconify.In,{icon:"mdi:fast-forward"})),showSkipControls&&react.createElement("button",{"aria-label":i18nAriaLabels.next,className:"rhap_button-clear rhap_main-controls-button rhap_skip-button",type:"button",onClick:onClickNext},customIcons.next?customIcons.next:react.createElement(iconify.In,{icon:"mdi:skip-next"})))}case RHAP_UI.VOLUME_CONTROLS:return react.createElement("div",{key,className:"rhap_volume-controls"},this.renderUIModules(customVolumeControls));case RHAP_UI.LOOP:{const loop=this.audio.current?this.audio.current.loop:loopProp;let loopIcon;return loopIcon=loop?customIcons.loop?customIcons.loop:react.createElement(iconify.In,{icon:"mdi:repeat"}):customIcons.loopOff?customIcons.loopOff:react.createElement(iconify.In,{icon:"mdi:repeat-off"}),react.createElement("button",{key,"aria-label":loop?i18nAriaLabels.loop:i18nAriaLabels.loopOff,className:"rhap_button-clear rhap_repeat-button",type:"button",onClick:this.handleClickLoopButton},loopIcon)}case RHAP_UI.VOLUME:{const{volume=muted?0:volumeProp}=this.audio.current||{};let volumeIcon;return volumeIcon=volume?customIcons.volume?customIcons.volume:react.createElement(iconify.In,{icon:"mdi:volume-high"}):customIcons.volume?customIcons.volumeMute:react.createElement(iconify.In,{icon:"mdi:volume-mute"}),react.createElement("div",{key,className:"rhap_volume-container"},react.createElement("button",{"aria-label":volume?i18nAriaLabels.volume:i18nAriaLabels.volumeMute,onClick:this.handleClickVolumeButton,type:"button",className:"rhap_button-clear rhap_volume-button"},volumeIcon),react.createElement(VolumeBar,{audio:this.audio.current,volume,onMuteChange:this.handleMuteChange,showFilledVolume,i18nVolumeControl:i18nAriaLabels.volumeControl}))}default:return(0,react.isValidElement)(comp)?comp.key?comp:(0,react.cloneElement)(comp,{key}):null}};componentDidMount(){this.forceUpdate();const audio=this.audio.current;this.props.muted?audio.volume=0:audio.volume=this.lastVolume,audio.addEventListener("error",e=>{const target=e.target;if(target.error&&target.currentTime===target.duration)return this.props.onEnded&&this.props.onEnded(e);this.props.onError&&this.props.onError(e)}),audio.addEventListener("canplay",e=>{this.props.onCanPlay&&this.props.onCanPlay(e)}),audio.addEventListener("canplaythrough",e=>{this.props.onCanPlayThrough&&this.props.onCanPlayThrough(e)}),audio.addEventListener("play",this.handlePlay),audio.addEventListener("abort",this.handleAbort),audio.addEventListener("ended",this.handleEnded),audio.addEventListener("playing",e=>{this.props.onPlaying&&this.props.onPlaying(e)}),audio.addEventListener("seeking",e=>{this.props.onSeeking&&this.props.onSeeking(e)}),audio.addEventListener("seeked",e=>{this.props.onSeeked&&this.props.onSeeked(e)}),audio.addEventListener("waiting",e=>{this.props.onWaiting&&this.props.onWaiting(e)}),audio.addEventListener("emptied",e=>{this.props.onEmptied&&this.props.onEmptied(e)}),audio.addEventListener("stalled",e=>{this.props.onStalled&&this.props.onStalled(e)}),audio.addEventListener("suspend",e=>{this.props.onSuspend&&this.props.onSuspend(e)}),audio.addEventListener("loadstart",e=>{this.props.onLoadStart&&this.props.onLoadStart(e)}),audio.addEventListener("loadedmetadata",e=>{this.props.onLoadedMetaData&&this.props.onLoadedMetaData(e)}),audio.addEventListener("loadeddata",e=>{this.props.onLoadedData&&this.props.onLoadedData(e)}),audio.addEventListener("pause",this.handlePause),audio.addEventListener("timeupdate",throttle(e=>{this.props.onListen&&this.props.onListen(e)},this.props.listenInterval)),audio.addEventListener("volumechange",e=>{this.props.onVolumeChange&&this.props.onVolumeChange(e)}),audio.addEventListener("encrypted",e=>{const{mse}=this.props;mse&&mse.onEcrypted&&mse.onEcrypted(e)})}componentDidUpdate(prevProps){const{src,autoPlayAfterSrcChange}=this.props;prevProps.src!==src&&(autoPlayAfterSrcChange?this.playAudioPromise():this.forceUpdate())}render(){const{className="",src,loop:loopProp=!1,preload="auto",autoPlay=!1,crossOrigin,mediaGroup,header,footer,layout="stacked",customProgressBarSection=[RHAP_UI.CURRENT_TIME,RHAP_UI.PROGRESS_BAR,RHAP_UI.DURATION],customControlsSection=[RHAP_UI.ADDITIONAL_CONTROLS,RHAP_UI.MAIN_CONTROLS,RHAP_UI.VOLUME_CONTROLS],children,style,i18nAriaLabels=H5AudioPlayer.defaultI18nAriaLabels}=this.props,loop=this.audio.current?this.audio.current.loop:loopProp,loopClass=loop?"rhap_loop--on":"rhap_loop--off",isPlayingClass=this.isPlaying()?"rhap_play-status--playing":"rhap_play-status--paused";return react.createElement("div",{role:"group",tabIndex:0,"aria-label":i18nAriaLabels.player,className:`rhap_container ${loopClass} ${isPlayingClass} ${className}`,onKeyDown:this.handleKeyDown,ref:this.container,style},react.createElement("audio",{src,controls:!1,loop,autoPlay,preload,crossOrigin,mediaGroup,ref:this.audio},children),header&&react.createElement("div",{className:"rhap_header"},header),react.createElement("div",{className:`rhap_main ${getMainLayoutClassName(layout)}`},react.createElement("div",{className:"rhap_progress-section"},this.renderUIModules(customProgressBarSection)),react.createElement("div",{className:"rhap_controls-section"},this.renderUIModules(customControlsSection))),footer&&react.createElement("div",{className:"rhap_footer"},footer))}}const src=H5AudioPlayer;H5AudioPlayer.__docgenInfo={description:"",methods:[{name:"togglePlay",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent",alias:"React.SyntheticEvent"}}],returns:{type:{name:"void"}}},{name:"playAudioPromise",docblock:"Safely play audio\n\nReference: https://developers.google.com/web/updates/2017/06/play-request-was-interrupted",modifiers:[],params:[],returns:{type:{name:"void"}},description:"Safely play audio\n\nReference: https://developers.google.com/web/updates/2017/06/play-request-was-interrupted"},{name:"isPlaying",docblock:null,modifiers:[],params:[],returns:{type:{name:"boolean"}}},{name:"handlePlay",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"handlePause",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"handleEnded",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"handleAbort",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"Event",alias:"Event"}}],returns:{type:{name:"void"}}},{name:"handleClickVolumeButton",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleMuteChange",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleClickLoopButton",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleClickRewind",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleClickForward",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"setJumpTime",docblock:null,modifiers:[],params:[{name:"time",optional:!1,type:{name:"number"}}],returns:{type:{name:"void"}}},{name:"setJumpVolume",docblock:null,modifiers:[],params:[{name:"volume",optional:!1,type:{name:"number"}}],returns:{type:{name:"void"}}},{name:"handleKeyDown",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent",alias:"React.KeyboardEvent"}}],returns:{type:{name:"void"}}},{name:"renderUIModules",docblock:null,modifiers:[],params:[{name:"modules",optional:!1,type:{name:"Array",elements:[{name:"union",raw:"RHAP_UI | ReactElement",elements:[{name:"RHAP_UI"},{name:"ReactElement"}]}],raw:"Array<CustomUIModule>",alias:"CustomUIModules"}}],returns:{type:{name:"Array",elements:[{name:"ReactElement"}],raw:"Array<ReactElement>"}}},{name:"renderUIModule",docblock:null,modifiers:[],params:[{name:"comp",optional:!1,type:{name:"union",raw:"RHAP_UI | ReactElement",elements:[{name:"RHAP_UI"},{name:"ReactElement"}],alias:"CustomUIModule"}},{name:"key",optional:!1,type:{name:"Key",alias:"Key"}}],returns:{type:{name:"ReactElement"}}}],displayName:"H5AudioPlayer",props:{autoPlay:{required:!1,tsType:{name:"boolean"},description:"HTML5 Audio tag autoPlay property"},autoPlayAfterSrcChange:{required:!1,tsType:{name:"boolean"},description:"Whether to play audio after src prop is changed"},className:{required:!1,tsType:{name:"string"},description:"custom classNames"},listenInterval:{required:!1,tsType:{name:"number"},description:"The time interval to trigger onListen"},progressJumpStep:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"5_000",computed:!1}},progressJumpSteps:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  backward?: number\n  forward?: number\n}",signature:{properties:[{key:"backward",value:{name:"number",required:!1}},{key:"forward",value:{name:"number",required:!1}}]}},description:"",defaultValue:{value:"{\n  backward: 5_000,\n  forward: 5_000,\n}",computed:!1}},volumeJumpStep:{required:!1,tsType:{name:"number"},description:""},loop:{required:!1,tsType:{name:"boolean"},description:""},muted:{required:!1,tsType:{name:"boolean"},description:""},crossOrigin:{required:!1,tsType:{name:"ReactAudioHTMLAttributes['crossOrigin']",raw:"React.AudioHTMLAttributes<HTMLAudioElement>['crossOrigin']"},description:""},mediaGroup:{required:!1,tsType:{name:"string"},description:""},hasDefaultKeyBindings:{required:!1,tsType:{name:"boolean"},description:""},onAbort:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onCanPlay:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onCanPlayThrough:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onEnded:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onPlaying:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onSeeking:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onSeeked:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onStalled:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onSuspend:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onLoadStart:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onLoadedMetaData:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onLoadedData:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onWaiting:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onEmptied:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onError:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onListen:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onVolumeChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onPause:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onPlay:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"e"}],return:{name:"void"}}},description:""},onClickPrevious:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.SyntheticEvent) => void",signature:{arguments:[{type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent"},name:"e"}],return:{name:"void"}}},description:""},onClickNext:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.SyntheticEvent) => void",signature:{arguments:[{type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent"},name:"e"}],return:{name:"void"}}},description:""},onPlayError:{required:!1,tsType:{name:"signature",type:"function",raw:"(err: Error) => void",signature:{arguments:[{type:{name:"Error"},name:"err"}],return:{name:"void"}}},description:""},onChangeCurrentTimeError:{required:!1,tsType:{name:"signature",type:"function",raw:"(err: Error) => void",signature:{arguments:[{type:{name:"Error"},name:"err"}],return:{name:"void"}}},description:""},mse:{required:!1,tsType:{name:"MSEPropsObject"},description:""},preload:{required:!1,tsType:{name:"union",raw:"'auto' | 'metadata' | 'none'",elements:[{name:"literal",value:"'auto'"},{name:"literal",value:"'metadata'"},{name:"literal",value:"'none'"}]},description:"HTML5 Audio tag preload property"},progressUpdateInterval:{required:!1,tsType:{name:"number"},description:"Pregress indicator refresh interval"},src:{required:!1,tsType:{name:"string"},description:"HTML5 Audio tag src property"},defaultCurrentTime:{required:!1,tsType:{name:"ReactNode"},description:""},defaultDuration:{required:!1,tsType:{name:"ReactNode"},description:""},volume:{required:!1,tsType:{name:"number"},description:""},showJumpControls:{required:!1,tsType:{name:"boolean"},description:""},showSkipControls:{required:!1,tsType:{name:"boolean"},description:""},showDownloadProgress:{required:!1,tsType:{name:"boolean"},description:""},showFilledProgress:{required:!1,tsType:{name:"boolean"},description:""},showFilledVolume:{required:!1,tsType:{name:"boolean"},description:""},timeFormat:{required:!1,tsType:{name:"union",raw:"'auto' | 'mm:ss' | 'hh:mm:ss'",elements:[{name:"literal",value:"'auto'"},{name:"literal",value:"'mm:ss'"},{name:"literal",value:"'hh:mm:ss'"}]},description:""},header:{required:!1,tsType:{name:"ReactNode"},description:""},footer:{required:!1,tsType:{name:"ReactNode"},description:""},customIcons:{required:!1,tsType:{name:"CustomIcons"},description:""},layout:{required:!1,tsType:{name:"union",raw:"'stacked' | 'stacked-reverse' | 'horizontal' | 'horizontal-reverse'",elements:[{name:"literal",value:"'stacked'"},{name:"literal",value:"'stacked-reverse'"},{name:"literal",value:"'horizontal'"},{name:"literal",value:"'horizontal-reverse'"}]},description:""},customProgressBarSection:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"RHAP_UI | ReactElement",elements:[{name:"RHAP_UI"},{name:"ReactElement"}]}],raw:"Array<CustomUIModule>"},description:""},customControlsSection:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"RHAP_UI | ReactElement",elements:[{name:"RHAP_UI"},{name:"ReactElement"}]}],raw:"Array<CustomUIModule>"},description:""},customAdditionalControls:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"RHAP_UI | ReactElement",elements:[{name:"RHAP_UI"},{name:"ReactElement"}]}],raw:"Array<CustomUIModule>"},description:""},customVolumeControls:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"RHAP_UI | ReactElement",elements:[{name:"RHAP_UI"},{name:"ReactElement"}]}],raw:"Array<CustomUIModule>"},description:""},i18nAriaLabels:{required:!1,tsType:{name:"I18nAriaLabels"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:""},style:{required:!1,tsType:{name:"CSSProperties"},description:""}}}}}]);